
import tkinter as tk
from tkinter import ttk

def create_main_window():
    root = tk.Tk()
    root.title("Fashion Recommendation System")
    root.geometry("800x600")

    # Top frame for user profile
    profile_frame = ttk.Frame(root)
    profile_frame.pack(side=tk.TOP, fill=tk.X)
    
    profile_label = ttk.Label(profile_frame, text="Welcome, User!", font=("Helvetica", 16))
    profile_label.pack(side=tk.LEFT, padx=10)
    
    profile_button = ttk.Button(profile_frame, text="Profile")
    profile_button.pack(side=tk.RIGHT, padx=10)
    
    # Middle frame for recommendations
    recommendations_frame = ttk.Frame(root)
    recommendations_frame.pack(side=tk.TOP, fill=tk.BOTH, expand=True)
    
    recommendations_label = ttk.Label(recommendations_frame, text="Recommended for You", font=("Helvetica", 14))
    recommendations_label.pack(side=tk.TOP, pady=10)
    
    # Using a canvas and scrollbar for dynamic recommendation display
    canvas = tk.Canvas(recommendations_frame)
    scrollbar = ttk.Scrollbar(recommendations_frame, orient="vertical", command=canvas.yview)
    scrollable_frame = ttk.Frame(canvas)
    
    scrollable_frame.bind(
        "<Configure>",
        lambda e: canvas.configure(
            scrollregion=canvas.bbox("all")
        )
    )
    
    canvas.create_window((0, 0), window=scrollable_frame, anchor="nw")
    
    canvas.configure(yscrollcommand=scrollbar.set)
    
    # Example items (these would be dynamically generated in a real app)
    for i in range(20):
        item_label = ttk.Label(scrollable_frame, text=f"Item {i+1}", font=("Helvetica", 12))
        item_label.pack(pady=5)
    
    canvas.pack(side=tk.LEFT, fill=tk.BOTH, expand=True)
    scrollbar.pack(side=tk.RIGHT, fill=tk.Y)
    
    # Bottom frame for search and filter
    search_frame = ttk.Frame(root)
    search_frame.pack(side=tk.BOTTOM, fill=tk.X)
    
    search_label = ttk.Label(search_frame, text="Search:", font=("Helvetica", 12))
    search_label.pack(side=tk.LEFT, padx=10)
    
    search_entry = ttk.Entry(search_frame)
    search_entry.pack(side=tk.LEFT, fill=tk.X, expand=True, padx=10)
    
    search_button = ttk.Button(search_frame, text="Go")
    search_button.pack(side=tk.RIGHT, padx=10)
    
    root.mainloop()

if __name__ == "__main__":
    create_main_window()
